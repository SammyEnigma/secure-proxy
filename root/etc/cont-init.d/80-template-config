#!/usr/bin/with-contenv bash

# Copy template files again if not exists to cache also updated files from init scripts
for i in $(find /default -type f)
do
    CONFIG_PATH="$(echo $i | sed -e "s/^\/default/\/config/")"
    CONFIG_DIR="$(echo "$(dirname "${CONFIG_PATH}")")"

	# Create directory if not exists
	mkdir -p $CONFIG_DIR

	# Copy file if not exists
	if [[ ! -f $CONFIG_PATH ]]; then
		cp $i $CONFIG_PATH
	fi
done
sleep 1

# Global ignore list for template updates as they might be updated from an refresh script on regular basis anyway
TEMPLATE_IGNORE_ARRAY=(
    "/default/nginx/conf.d/deny-bad-ip-addresses.conf"
    "/default/nginx/conf.d/deny-tor-proxies.conf"
    "/default/nginx/conf.d/deny-bad-referers.conf"
    "/default/nginx/conf.d/deny-bad-user-agents.conf"
    "/default/nginx/conf.d/autoconf.conf"
)

# Check for configuration updates that need to be performed from the user manually to prevent any breaking changes
for i in $(find /default/ -type f)
do  
    #Only compare files when they are not in the ignore list
    if [[ ! "${TEMPLATE_IGNORE_ARRAY[@]}" =~ "${i}" ]]; then
        CONFIG_PATH="$(echo $i | sed -e "s/^\/default/\/config/")"
        FILE_EQUAL="$(cmp -s ${CONFIG_PATH} ${i}; echo $?)"
        if [[ $FILE_EQUAL -ne 0 ]]; then 
            confs_changed="${CONFIG_PATH}\n${confs_changed}"
        fi
    fi
done

# Inform about available updates
if [ -n "$confs_changed" ]; then
    echo "**** Changes in default configurations detected ****"
    echo "**** Remove the following files to get defaults ****"
    echo "**** Save your custom settings before deletion  ****"
    echo -e "${confs_changed}"
fi